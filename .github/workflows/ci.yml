name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: homeschoolai_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        php-version: ['8.2', '8.3']
        node-version: ['18.x', '20.x']

    name: PHP ${{ matrix.php-version }} - Node ${{ matrix.node-version }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, pdo, pdo_pgsql, redis, xml, curl, zip, bcmath
        coverage: pcov

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-composer-

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Install NPM dependencies
      run: npm ci

    - name: Generate application key
      run: php artisan key:generate

    - name: Set up database
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: homeschoolai_test
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
      run: |
        php artisan migrate --force
        php artisan db:seed --force

    - name: Build frontend assets
      run: npm run build

    - name: Run PHP linting
      run: ./vendor/bin/pint --test

    - name: Run PHPStan static analysis
      run: ./vendor/bin/phpstan analyse

    - name: Run PHPUnit tests
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: homeschoolai_test
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
        CACHE_STORE: array
        SESSION_DRIVER: array
      run: php -d memory_limit=2G artisan test --coverage --min=80

    - name: Run JavaScript linting
      run: npm run lint

    - name: Run TypeScript checks
      run: npm run type-check

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.php-version == '8.2' && matrix.node-version == '18.x'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  e2e:
    runs-on: ubuntu-latest
    needs: test
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: homeschoolai_e2e
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, pdo, pdo_pgsql, redis, xml, curl, zip, bcmath

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        composer install --prefer-dist --no-progress --no-suggest
        npm ci
        npx playwright install --with-deps chromium

    - name: Prepare application
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: homeschoolai_e2e
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
      run: |
        cp .env.example .env
        php artisan key:generate
        php artisan migrate --force
        npm run build

    - name: Start Laravel server
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: homeschoolai_e2e
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
        CACHE_STORE: array
        SESSION_DRIVER: file
      run: |
        php artisan serve --port=8000 &
        sleep 5

    - name: Run E2E tests
      env:
        BASE_URL: http://localhost:8000
      run: npx playwright test

    - name: Upload Playwright report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Security vulnerability scan
      run: composer audit

    - name: Check for outdated dependencies
      run: composer outdated --direct

  code-quality:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        coverage: none

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Check PSR-12 compliance
      run: ./vendor/bin/pint --test

    - name: Run Larastan (Laravel-specific PHPStan)
      run: ./vendor/bin/phpstan analyse --level=5

    - name: Check for code duplications
      run: ./vendor/bin/phpcpd app/ --min-lines=5 --min-tokens=70 || true